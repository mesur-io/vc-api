openapi: 3.0.0
info:
  version: 0.0.3-unstable
  title: VC Holder HTTP API
  description: >-
    This is an Experimental Open API Specification for the [VC Data
    Model](https://www.w3.org/TR/vc-data-model/).
  license:
    name: W3C Software and Document License
    url: http://www.w3.org/Consortium/Legal/copyright-software.
  contact:
    name: GitHub Source Code
    url: https://github.com/w3c-ccg/vc-api
paths:
  /credentials/{id}:
    get:
      tags:
        - Credentials
      summary: Gets a credential or verifiable credential by ID
      operationId: getCredential
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Credential retrieved
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Credential'
                  - $ref: '#/components/schemas/VerifiableCredential'
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '410':
          description: Gone! There is no data here
        '500':
          description: Internal Error
        '501':
          description: Not Implemented
  /credentials:
    get:
      tags:
        - Credentials
      summary: Gets list of credentials or verifiable credentials
      operationId: getCredentials
      parameters:
        - in: query
          name: type
          schema:
            type: array
            items:
              type: string
              oneOf:
                - credentials
                - verifiablecredentials
                - all
      responses:
        '200':
          description: Credentials retrieved
          content:
            application/json:
              schema:
                type: array
                description: The Credentials
                items:
                  anyOf:
                    - $ref: '#/components/schemas/VerifiableCredential'
                    - $ref: '#/components/schemas/Credential'
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '410':
          description: Gone! There is no data here
        '500':
          description: Internal Error
        '501':
          description: Not Implemented
  /presentations/{id}:
    get:
      tags:
        - Presentation
      summary: Gets a presentation or verifiable presentation by ID
      operationId: getPresentation
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Credential retrieved
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Presentation'
                  - $ref: '#/components/schemas/VerifiablePresentation'
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '410':
          description: Gone! There is no data here
        '500':
          description: Internal Error
        '501':
          description: Not Implemented
  /Presentation:
    get:
      tags:
        - Presentation
      summary: Gets list of presentations or verifiable presentations
      operationId: getPresentations
      parameters:
        - in: query
          name: type
          schema:
            type: array
            items:
              type: string
              oneOf:
                - presentations
                - verifiablepresentations
                - all
      responses:
        '200':
          description: Presentations retrieved
          content:
            application/json:
              schema:
                type: array
                description: The Presentations
                items:
                  anyOf:
                    - $ref: '#/components/schemas/Presentation'
                    - $ref: '#/components/schemas/VerifiablePresentation'
        '400':
          description: Bad Request
        '401':
          description: Not Authorized
        '410':
          description: Gone! There is no data here
        '500':
          description: Internal Error
        '501':
          description: Not Implemented
  /credentials/derive:
    post:
      tags:
        - Credentials
      summary: Derives a credential and returns it in the response body.
      operationId: deriveCredential
      description: Derives a credential and returns it in the response body.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeriveCredentialRequest'
        description: Parameters for deriving the credential.
      responses:
        '201':
          description: Credential derived successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifiableCredential'
        '400':
          description: Invalid Request
        '500':
          description: Internal Error
        '501':
          description: Not Implemented
  /presentations/prove:
    post:
      summary: Proves a presentation and returns it in the response body.
      tags:
        - Presentations
      operationId: provePresentation
      description: Proves a presentation and returns it in the response body.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvePresentationRequest'
        description: Parameters for proving the presentation.
      responses:
        '201':
          description: Presentation successfully proved!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifiablePresentation'
        '400':
          description: invalid input!
        '500':
          description: error!
  /exchanges/{exchange-id}:
    post:
      summary: Initiates an exchange of information.
      tags:
        - Exchanges
      operationId: initiateExchange
      description: >-
        A client can use this endpoint to initiate an exchange of a particular
        type. The client can include HTTP POST information related to the
        details of exchange it would like to initiate. If the server understands
        the request, it returns a Verifiable Presentation Request. A request
        that the server cannot understand results in an error.
      parameters:
        - $ref: '#/components/parameters/ExchangeId'
      requestBody:
        description: >-
          Information related to the type of exchange the client would like to
          start.
        content:
          application/json:
            schema:
              anyOf:
                - type: object
                  description: Data necessary to initiate the exchange.
                - $ref: '#/components/schemas/NotifyPresentationAvailableRequest'
      responses:
        '200':
          description: Proceed with exchange.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifiablePresentationRequest'
        '400':
          description: Request is malformed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
        '501':
          description: Service not implemented.
  /exchanges/{exchange-id}/{transaction-id}:
    put:
      summary: Receives information related to an existing exchange.
      tags:
        - Exchanges
      operationId: receiveExchangeData
      description: >-
        A client can use this endpoint to continue the exchange of information
        associated with an initiated exchange by sending a Verifiable
        Presentation with information requested by the server to this endpoint.
      parameters:
        - $ref: '#/components/parameters/ExchangeId'
        - $ref: '#/components/parameters/TransactionId'
      requestBody:
        description: A Verifiable Presentation.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifiablePresentation'
      responses:
        '200':
          description: Received data was accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifiablePresentationRequest'
        '400':
          description: Received data is malformed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
        '501':
          description: Service not implemented.
components:
  schemas:
    DeriveCredentialRequest:
      type: object
      properties:
        verifiableCredential:
          $ref: '#/components/schemas/VerifiableCredential'
        frame:
          type: object
          description: A JSON-LD frame used for selective disclosure.
        options:
          $ref: '#/components/schemas/DeriveCredentialOptions'
    DeriveCredentialResponse:
      $ref: '#/components/schemas/VerifiableCredential'
    ProvePresentationRequest:
      type: object
      properties:
        presentation:
          $ref: '#/components/schemas/Presentation'
        options:
          $ref: '#/components/schemas/PresentCredentialOptions'
    ProvePresentationResponse:
      $ref: '#/components/schemas/VerifiablePresentation'
    NotifyPresentationAvailableRequest:
      type: object
      properties:
        query:
          type: object
          description: See https://w3c-ccg.github.io/vp-request-spec/#format
          properties:
            type:
              type: string
              description: The type of query the server should reply with.
            credentialQuery:
              type: object
              description: Details of the client's available presentation
      example:
        query:
          - type: RequestQueryByFrame
            credentialQuery:
              - type:
                  - VerifiableCredential
                  - CommercialInvoiceCertificate
                reason: Wallet XYZ is ready to selectively disclose new credentials.
    NotifyPresentationAvailableResponse:
      type: object
      properties:
        query:
          type: object
          description: See https://w3c-ccg.github.io/vp-request-spec/#format
        domain:
          type: string
          description: See https://w3id.org/security#domain
        challenge:
          type: string
          description: See https://w3id.org/security#challenge
      example:
        query:
          - type: QueryByFrame
            credentialQuery:
              frame:
                '@context':
                  - https://www.w3.org/2018/credentials/v1
                  - https://w3id.org/traceability/v1
                  - https://w3id.org/bbs/v1
                type:
                  - VerifiableCredential
                  - CommercialInvoiceCertificate
                credentialSubject:
                  '@explicit': true
                  type:
                    - CommercialInvoice
                  purchaseDate: {}
                  destinationCountry: {}
        domain: jobs.example.com
        challenge: 3182bdea-63d9-11ea-b6de-3b7c1404d57f
    ErrorResponse:
      type: object
      description: A response that denotes that an error has occurred.
      properties:
        id:
          type: string
          pattern: '[a-z0-9\-]{8,}'
        message:
          type: string
          minLength: 10
          maxLength: 100
        details:
          type: object
      required:
        - id
        - message
      example:
        id: invalid-json
        message: The provided JSON data was malformed.
    StorePresentationRequest:
      $ref: '#/components/schemas/VerifiablePresentation'
    VerifiablePresentation:
      type: object
      description: A JSON-LD Verifiable Presentation with a proof.
      allOf:
        - $ref: '#/components/schemas/Presentation'
        - type: object
          properties:
            proof:
              $ref: '#/components/schemas/LinkedDataProof'
      example:
        '@context':
          - https://www.w3.org/2018/credentials/v1
          - https://www.w3.org/2018/credentials/examples/v1
        holder: did:example:123
        type: VerifiablePresentation
        verifiableCredential:
          - '@context':
              - https://www.w3.org/2018/credentials/v1
              - https://www.w3.org/2018/credentials/examples/v1
          - id: http://example.gov/credentials/3732
          - type:
              - VerifiableCredential
              - UniversityDegreeCredential
          - issuer: did:example:123
          - issuanceDate: '2020-03-16T22:37:26.544Z'
          - credentialSubject:
              id: did:example:123
              degree:
                type: BachelorDegree
                name: Bachelor of Science and Arts
          - proof:
              type: Ed25519Signature2018
              created: '2020-04-02T18:28:08Z'
              verificationMethod: did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN
              proofPurpose: assertionMethod
              jws: >-
                eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
        proof:
          type: Ed25519Signature2018
          created: '2020-04-02T18:28:08Z'
          verificationMethod: did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN
          proofPurpose: assertionMethod
          jws: >-
            eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
    VerifiablePresentationRequest:
      type: object
      description: A Verifiable Presentation Request.
      properties:
        query:
          type: array
          description: A set of one or more queries sent by the requester.
          items:
            type: object
            properties:
              type:
                type: array
                description: The type of the query.
                items:
                  type: string
        challenge:
          type: string
          description: >-
            A challenge, intended to prevent replay attacks, provided by the
            requester that is typically expected to be included in the
            Verifiable Presentation response.
        domain:
          type: string
          description: >-
            A domain, intended to prevent replay attacks, provided by the
            requester that is typically expected to be included in the
            Verifiable Presentation response.
          items:
            type: string
        interact:
          type: array
          description: A list of interaction mechanisms that are supported by the server.
          items:
            type: object
            properties:
              service:
                type: object
                description: >-
                  A service that is supported by the server that is capable of
                  receiving a response to the Verifiable Presentation Request.
                properties:
                  type:
                    type: array
                    description: The type of the service.
                    items:
                      type: string
                  serviceEndpoint:
                    type: string
                    description: >-
                      A URL that can be utilized for interacting with the
                      service for the purposes of responding to the Verifiable
                      Presentation Request.
      example:
        query:
          - type: DIDAuth
          - type: QueryByExample
            credentialQuery:
              reason: We need to see your existing University Degree credential.
              example:
                '@context':
                  - https://www.w3.org/2018/credentials/v1
                  - https://www.w3.org/2018/credentials/examples/v1
                type: UniversityDegreeCredential
        challenge: 3182bdea-63d9-11ea-b6de-3b7c1404d57f
        domain: edu.example
        interact:
          service:
            - type: UnmediatedPresentationService2021
              serviceEndpoint: https://edu.example/workflows/123456/presentations
    Issuer:
      type: object
      description: A JSON-LD Verifiable Credential Issuer.
      oneOf:
        - type: string
        - type: object
          properties:
            id:
              type: string
      example:
        id: did:key:z6MkjRagNiMu91DduvCvgEsqLZDVzrJzFrwahc4tXLt9DoHd
    Credential:
      type: object
      description: A JSON-LD Verifiable Credential without a proof.
      properties:
        '@context':
          type: array
          description: The JSON-LD context of the credential.
          items:
            type: string
        id:
          type: string
          description: The ID of the credential.
        type:
          type: array
          description: The JSON-LD type of the credential.
          items:
            type: string
        issuer:
          $ref: '#/components/schemas/Issuer'
        issuanceDate:
          type: string
          description: The issuanceDate
        expirationDate:
          type: string
          description: The expirationDate
        credentialSubject:
          type: object
          description: The subject
      example:
        '@context':
          - https://www.w3.org/2018/credentials/v1
          - https://www.w3.org/2018/credentials/examples/v1
        id: http://example.gov/credentials/3732
        type:
          - VerifiableCredential
          - UniversityDegreeCredential
        issuer: did:example:123
        issuanceDate: '2020-03-16T22:37:26.544Z'
        credentialSubject:
          id: did:example:123
          degree:
            type: BachelorDegree
            name: Bachelor of Science and Arts
    LinkedDataProof:
      type: object
      description: A JSON-LD Linked Data proof.
      properties:
        type:
          type: string
          description: Linked Data Signature Suite used to produce proof.
        created:
          type: string
          description: Date the proof was created.
        challenge:
          type: string
          description: >-
            A value chosen by the verifier to mitigate authentication proof
            replay attacks.
        domain:
          type: string
          description: The domain of the proof to restrict its use to a particular target.
        nonce:
          type: string
          description: >-
            A value chosen by the creator of a proof to randomize proof values
            for privacy purposes.
        verificationMethod:
          type: string
          description: Verification Method used to verify proof.
        proofPurpose:
          type: string
          description: The purpose of the proof to be used with verificationMethod.
        jws:
          type: string
          description: Detached JSON Web Signature.
        proofValue:
          type: string
          description: Value of the Linked Data proof.
      example:
        type: Ed25519Signature2018
        created: '2020-04-02T18:28:08Z'
        verificationMethod: did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN
        proofPurpose: assertionMethod
        jws: >-
          eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
    VerifiableCredential:
      type: object
      description: A JSON-LD Verifiable Credential with a proof.
      allOf:
        - $ref: '#/components/schemas/Credential'
        - type: object
          properties:
            proof:
              $ref: '#/components/schemas/LinkedDataProof'
      example:
        '@context':
          - https://www.w3.org/2018/credentials/v1
          - https://www.w3.org/2018/credentials/examples/v1
        id: http://example.gov/credentials/3732
        type:
          - VerifiableCredential
          - UniversityDegreeCredential
        issuer: did:example:123
        issuanceDate: '2020-03-16T22:37:26.544Z'
        credentialSubject:
          id: did:example:123
          degree:
            type: BachelorDegree
            name: Bachelor of Science and Arts
        proof:
          type: Ed25519Signature2018
          created: '2020-04-02T18:28:08Z'
          verificationMethod: did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN
          proofPurpose: assertionMethod
          jws: >-
            eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
    Presentation:
      type: object
      description: A JSON-LD Verifiable Presentation without a proof.
      properties:
        '@context':
          type: array
          description: The JSON-LD context of the presentation.
          items:
            type: string
        id:
          type: string
          description: The ID of the presentation.
        type:
          type: array
          description: The JSON-LD type of the presentation.
          items:
            type: string
        holder:
          type: object
          description: >-
            The holder - will be ignored if no proof is present since there is
            no proof of authority over the credentials
          nullable: true
        verifiableCredential:
          type: array
          description: The Verifiable Credentials
          items:
            $ref: '#/components/schemas/VerifiableCredential'
      example:
        '@context':
          - https://www.w3.org/2018/credentials/v1
          - https://www.w3.org/2018/credentials/examples/v1
        holder: did:example:123
        type: VerifiablePresentation
        verifiableCredential:
          - '@context':
              - https://www.w3.org/2018/credentials/v1
              - https://www.w3.org/2018/credentials/examples/v1
          - id: http://example.gov/credentials/3732
          - type:
              - VerifiableCredential
              - UniversityDegreeCredential
          - issuer: did:example:123
          - issuanceDate: '2020-03-16T22:37:26.544Z'
          - credentialSubject:
              id: did:example:123
              degree:
                type: BachelorDegree
                name: Bachelor of Science and Arts
          - proof:
              type: Ed25519Signature2018
              created: '2020-04-02T18:28:08Z'
              verificationMethod: did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN
              proofPurpose: assertionMethod
              jws: >-
                eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
    DeriveCredentialOptions:
      type: object
      additionalProperties: false
      description: Options for specifying how the derived credential is created.
      properties:
        nonce:
          type: string
          description: >-
            An encoded nonce provided by the holder of the credential to be
            included into the LinkedDataProof.
      example:
        nonce: lEixQKDQvRecCifKl789TQj+Ii6YWDLSwn3AxR0VpPJ1QV5htod/0VCchVf1zVM0y2E=
    PresentCredentialOptions:
      type: object
      additionalProperties: false
      description: Options for specifying how the LinkedDataProof is created.
      properties:
        type:
          type: string
          description: >-
            The type of the proof. Default is an appropriate proof type
            corresponding to the verification method.
        verificationMethod:
          type: string
          description: >-
            The URI of the verificationMethod used for the proof. If omitted, a
            default verification method will be used.
        proofPurpose:
          type: string
          description: The purpose of the proof. Default 'assertionMethod'.
        created:
          type: string
          description: >-
            The date and time of the proof (with a maximum accuracy in seconds).
            Default current system time.
        challenge:
          type: string
          description: >-
            A challenge provided by the requesting party of the proof. For
            example 6e62f66e-67de-11eb-b490-ef3eeefa55f2
        domain:
          type: string
          description: >-
            The intended domain of validity for the proof. For example
            website.example
      example:
        type: Ed25519Signature2018
        verificationMethod: did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN
        proofPurpose: assertionMethod
        created: '2020-04-02T18:48:36Z'
        domain: example.com
        challenge: d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8
  parameters:
    ExchangeId:
      name: exchange-id
      description: A potentially human-readable identifier for an exchange.
      in: path
      required: true
      schema:
        type: string
        minimum: 3
        pattern: '[a-z0-9][a-z0-9\-]{2,}'
    TransactionId:
      in: path
      name: transaction-id
      required: true
      schema:
        anyOf:
          - type: string
            pattern: "[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}"
          - type: string
            pattern: z[1-9A-HJ-NP-Za-km-z]{21,22}
          - type: string
            pattern: u[a-zA-Z0-9_-]{22,23}
      example:
        - f37e5114-8b4a-11ec-b32e-fbd62b9502c1
        - z4Z1T4HdLdfXCFAhdhzdCqm
        - u7m8_ybOArX-EWeADqWCsIw
